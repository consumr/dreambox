# -*- mode: ruby -*-
# vi: set ft=ruby :

require_relative 'class_config.rb'

dreambox_config_file = (defined?(config_file)) ? config_file : 'vm-config.yml'

Dreambox = Config.new(dreambox_config_file)

if (defined?($user_vars) && ($user_vars.kind_of? Hash))
  warn(">> Dreambox no longer uses `$user_vars` for configurations.".black.bg_yellow)
  warn(">> See https://github.com/goodguyry/dreambox/wiki for more information.".black.bg_yellow)
end

Vagrant.configure(2) do |config|
  # Start bash as a non-login shell
  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"

  config.vm.provider "virtualbox" do |vb|
    vb.name = "Dreambox"
  end

  if Dreambox.config['ssl_enabled'] then
    config.vm.provision "SSL Setup",
      type: "shell",
      inline: "/bin/bash /usr/local/dreambox/ssl.sh",
      :env => Dreambox.config
  end

  Dreambox.config['sites'].each do |site, conf|
    config.vm.provision "User Setup: #{conf['user']}",
      type: "shell",
      inline: "/bin/bash /usr/local/dreambox/user.sh",
      :env => conf

    if (! conf['is_subdomain']) then
      config.vm.synced_folder conf['sync'], conf['sync_destination'],
        owner: "#{conf['uid']}",
        group: "#{conf['gid']}",
        mount_options: ["dmode=775,fmode=664"]
    end

    config.vm.provision "VHost Setup: #{conf['host']}",
      type: "shell",
      inline: "/bin/bash /usr/local/dreambox/vhost.sh",
      :env => conf
  end

  test.vm.provision "Start Apache",
    type: "shell",
    inline: "/bin/bash /etc/init.d/httpd2 start"
end
